[{"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js":"1","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js":"2","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js":"3","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js":"4","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js":"5","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js":"6","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js":"7","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js":"8","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js":"9","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js":"10","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js":"11","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js":"12","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js":"13","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js":"14","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js":"15","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js":"16","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js":"17"},{"size":290,"mtime":1613062720933,"results":"18","hashOfConfig":"19"},{"size":800,"mtime":1613314103024,"results":"20","hashOfConfig":"19"},{"size":2657,"mtime":1613244797015,"results":"21","hashOfConfig":"19"},{"size":5052,"mtime":1613497977693,"results":"22","hashOfConfig":"19"},{"size":6717,"mtime":1613503112512,"results":"23","hashOfConfig":"19"},{"size":4143,"mtime":1613491705411,"results":"24","hashOfConfig":"19"},{"size":421,"mtime":1613065293116,"results":"25","hashOfConfig":"19"},{"size":1809,"mtime":1613314028979,"results":"26","hashOfConfig":"19"},{"size":1337,"mtime":1613492015355,"results":"27","hashOfConfig":"19"},{"size":3752,"mtime":1613490429357,"results":"28","hashOfConfig":"19"},{"size":245,"mtime":1613150086148,"results":"29","hashOfConfig":"19"},{"size":2526,"mtime":1613327984831,"results":"30","hashOfConfig":"19"},{"size":181,"mtime":1613078703780,"results":"31","hashOfConfig":"19"},{"size":6536,"mtime":1613493881325,"results":"32","hashOfConfig":"19"},{"size":5076,"mtime":1613466909840,"results":"33","hashOfConfig":"19"},{"size":237,"mtime":1613502944848,"results":"34","hashOfConfig":"19"},{"size":598,"mtime":1613476620718,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zysp8q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js",[],["73","74"],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js",["75"],"import { Component } from \"react\";\nimport Loader from \"./loader/Loader\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: null,\n    };\n  }\n  componentDidMount() {\n    const slug = this.props.slug;\n    fetch(`/api/articles/${slug}/comments`, {\n      authorization: localStorage?.token,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          comments: res.comments,\n        });\n      });\n  }\n  render() {\n    const { comments } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-8 offset-md-2\">\n          <form className=\"card comment-form\">\n            <div className=\"card-block\">\n              <textarea\n                className=\"form-control\"\n                placeholder=\"Write a comment...\"\n                rows=\"3\"\n              ></textarea>\n            </div>\n            <div className=\"card-footer\">\n              {/* current user data image */}\n              <img\n                src=\"http://i.imgur.com/Qr71crq.jpg\"\n                className=\"comment-author-img\"\n              />\n              <button className=\"btn btn-sm btn-primary\">\n                Post Comment\n              </button>\n            </div>\n          </form>\n          {Comments(comments)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Comments(comments) {\n  if (!comments) {\n    return <Loader />;\n  }\n\n  if (!comments?.length) {\n    return <h5 className=\"article-preview\">No comments...</h5>;\n  }\n\n  return comments.map((comment) => (\n    <div key={comment?.id} className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link to=\"/profile\" className=\"comment-author\">\n          <img\n            src={comment.author?.image || \"http://i.imgur.com/Xzm3mI0.jpg\"}\n            alt=\"avatar\"\n            className=\"comment-author-img\"\n          />\n        </Link>\n        &nbsp;\n        <Link to=\"/profile\" className=\"comment-author\">\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">\n          {moment(comment.createdAt).format(\"dddd, MMMM Do YYYY\")}\n        </span>\n        <span className=\"mod-options\">\n          <span className=\"ion-edit\">‚úèÔ∏è</span>\n          <span className=\"ion-trash-a\">üóë</span>\n        </span>\n      </div>\n    </div>\n  ));\n}\n\nexport default Comment;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js",["76"],"import { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postResponse: null,\n    };\n  }\n  // componentDidMount() {\n  //   fetch(\"/api/user\", { authorization: JSON.parse(localStorage.token) })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       this.setState({ postResponse: data });\n  //     });\n  // }\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   const { title, description, body, tagList } = this.state;\n  //   const article = { title, description, body, tagList };\n  //   const errors = this.state.errors;\n\n  //   if (\n  //     !errors.title &&\n  //     !errors.description &&\n  //     !errors.body &&\n  //     !errors.tagList\n  //   ) {\n  //     const requestOptions = {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         authorization: localStorage?.token,\n  //       },\n  //       body: JSON.stringify({ article }),\n  //     };\n  //     fetch(\"/api/articles\", requestOptions)\n  //       .then((response) => response.json())\n  //       .then((data) => this.setState({ postResponse: data }));\n  //   }\n  // };\n  // handleChange = ({ target }) => {\n  //   let { name, value } = target;\n  //   let errors = this.state.errors;\n  //   let tags = [];\n\n  //   switch (name) {\n  //     case \"title\":\n  //       errors.title = !value.length ? \"Title is required\" : \"\";\n  //       break;\n  //     case \"description\":\n  //       errors.description = !value.length\n  //         ? \"Description is required\"\n  //         : value.length < 10\n  //         ? \"Description must have atleast 10 character\"\n  //         : \"\";\n  //       break;\n  //     case \"body\":\n  //       errors.body = !value.length\n  //         ? \"Body is required\"\n  //         : value.length < 20\n  //         ? \"Body must have atleast 20 character\"\n  //         : \"\";\n  //       break;\n  //     case \"tagInput\":\n  //       if (value.includes(\",\")) {\n  //         tags = value\n  //           .trim()\n  //           .split(\",\")\n  //           .map((tag) => tag.trim())\n  //           .filter((val) => val !== \"\");\n  //         value = \"\";\n  //       }\n  //       errors.tagList =\n  //         !this.state.tagList.length && !tags.length\n  //           ? \"TagList is required\"\n  //           : \"\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n\n  //   this.setState(({ tagList }) => ({\n  //     [name]: value,\n  //     tagList: tagList.concat(tags),\n  //     errors: errors,\n  //   }));\n  // };\n  // handleTagCancel = (tag) => {\n  //   let { tagList } = this.state;\n  //   tagList = tagList.filter((val) => val !== tag);\n  //   this.setState({ tagList });\n  // };\n  render() {\n    // const { postResponse } = this.state;\n\n    // if (postResponse?.user) {\n    //   return <Redirect to={`/articles/${postResponse.article.slug}`} />;\n    // }\n\n    return (\n      <div className=\"settings-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Your Settings</h1>\n\n              <form>\n                <fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"URL of profile picture\"\n                    />\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Your Name\"\n                    />\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      rows=\"8\"\n                      placeholder=\"Short bio about you\"\n                    ></textarea>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Email\"\n                    />\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                    />\n                  </fieldset>\n                  <button className=\"btn btn-lg btn-primary pull-xs-right\">\n                    Update Settings\n                  </button>\n                </fieldset>\n              </form>\n\n              <hr />\n\n              <button className=\"btn btn-outline-danger\">\n                Or click here to logout.\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":41,"column":15,"nodeType":"83","endLine":44,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]