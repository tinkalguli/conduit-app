[{"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js":"1","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js":"2","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js":"3","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js":"4","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js":"5","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js":"6","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js":"7","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js":"8","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js":"9","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js":"10","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js":"11","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js":"12","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js":"13","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js":"14","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js":"15","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js":"16","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js":"17","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Profile.js":"18","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Dashboard.js":"19","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/spinner/Spinner.js":"20"},{"size":290,"mtime":1613062720933,"results":"21","hashOfConfig":"22"},{"size":1038,"mtime":1613580885815,"results":"23","hashOfConfig":"22"},{"size":2657,"mtime":1613574151213,"results":"24","hashOfConfig":"22"},{"size":5052,"mtime":1613497977693,"results":"25","hashOfConfig":"22"},{"size":6724,"mtime":1613550594824,"results":"26","hashOfConfig":"22"},{"size":6511,"mtime":1613597024881,"results":"27","hashOfConfig":"22"},{"size":421,"mtime":1613065293116,"results":"28","hashOfConfig":"22"},{"size":1805,"mtime":1613577013120,"results":"29","hashOfConfig":"22"},{"size":1337,"mtime":1613492015355,"results":"30","hashOfConfig":"22"},{"size":3861,"mtime":1613576295583,"results":"31","hashOfConfig":"22"},{"size":245,"mtime":1613150086148,"results":"32","hashOfConfig":"22"},{"size":4554,"mtime":1613587906497,"results":"33","hashOfConfig":"22"},{"size":181,"mtime":1613078703780,"results":"34","hashOfConfig":"22"},{"size":6536,"mtime":1613493881325,"results":"35","hashOfConfig":"22"},{"size":7153,"mtime":1613577446978,"results":"36","hashOfConfig":"22"},{"size":289,"mtime":1613573239821,"results":"37","hashOfConfig":"22"},{"size":598,"mtime":1613476620718,"results":"38","hashOfConfig":"22"},{"size":3228,"mtime":1613576846305,"results":"39","hashOfConfig":"22"},{"size":2657,"mtime":1613244823322,"results":"40","hashOfConfig":"22"},{"size":100,"mtime":1613587694098,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zysp8q",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js",[],["85","86"],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js",["87"],"import { Component } from \"react\";\nimport Loader from \"./loader/Loader\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { articleURL } from \"../utility/utility\";\nimport Spinner from \"./spinner/Spinner\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: null,\n      fetchRequestError: \"\",\n      postRequestError: \"\",\n      commentBody: \"\",\n      createdComment: null,\n    };\n  }\n  fetchData = () => {\n    const slug = this.props.slug;\n\n    fetch(`${articleURL}/${slug}/comments`, {\n      authorization: localStorage.getItem(\"token\"),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          comments: data.comments,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          fetchRequestError: \"Not able to fetch the comments\",\n        });\n      });\n  };\n  componentDidMount() {\n    this.fetchData();\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      createdComment: \"spinning\",\n    });\n\n    const slug = this.props.slug;\n    const { commentBody } = this.state;\n    const comment = { body: commentBody };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ comment }),\n    };\n    fetch(`${articleURL}/${slug}/comments`, requestOptions)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((data) => this.setState({ createdComment: data.comment }))\n      .then(() => {\n        this.fetchData();\n      })\n      .catch((error) => {\n        this.setState({\n          postRequestError: \"Not able to create the comment\",\n        });\n      });\n  };\n  handleChange = ({ target }) => {\n    let { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    const {\n      comments,\n      fetchRequestError,\n      commentBody,\n      createdComment,\n    } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-8 offset-md-2\">\n          <form onSubmit={this.handleSubmit} className=\"card comment-form\">\n            <div className=\"card-block\">\n              <textarea\n                name=\"commentBody\"\n                onChange={this.handleChange}\n                value={commentBody}\n                className=\"form-control\"\n                placeholder=\"Write a comment...\"\n                rows=\"3\"\n              ></textarea>\n            </div>\n            <div className=\"card-footer\">\n              {/* current user data image */}\n              <img\n                src=\"http://i.imgur.com/Qr71crq.jpg\"\n                className=\"comment-author-img\"\n              />\n              <button className=\"btn btn-sm btn-primary\">\n                {createdComment === \"spinning\" ? (\n                  <Spinner />\n                ) : (\n                  \"Post Comment\"\n                )}\n              </button>\n            </div>\n          </form>\n          {Comments(comments, fetchRequestError)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Comments(comments, fetchRequestError) {\n  if (fetchRequestError) {\n    return <p className=\"article-preview\">{fetchRequestError}</p>;\n  }\n\n  if (!comments) {\n    return <Loader />;\n  }\n\n  if (!comments?.length) {\n    return <h5 className=\"article-preview\">No comments...</h5>;\n  }\n\n  return comments.map((comment) => (\n    <div key={comment?.id} className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link to=\"/profile\" className=\"comment-author\">\n          <img\n            src={comment.author?.image || \"http://i.imgur.com/Xzm3mI0.jpg\"}\n            alt=\"avatar\"\n            className=\"comment-author-img\"\n          />\n        </Link>\n        &nbsp;\n        <Link to=\"/profile\" className=\"comment-author\">\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">\n          {moment(comment.createdAt).format(\"dddd, MMMM Do YYYY\")}\n        </span>\n        <span className=\"mod-options\">\n          <span className=\"ion-edit\">✏️</span>\n          <span className=\"ion-trash-a\">🗑</span>\n        </span>\n      </div>\n    </div>\n  ));\n}\n\nexport default Comment;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Profile.js",["88"],"import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"./partials/ArticleList\";\nimport { currentUserURL } from \"./utility/utility\";\nimport Loader from \"./partials/loader/Loader\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeFeed: \"personal\",\n      requestError: \"\",\n      currentUser: null,\n    };\n  }\n  componentDidMount() {\n    fetch(currentUserURL, {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ currentUser: data.user });\n      })\n      .catch((error) => {\n        this.setState({\n          requestError: \"Not able to fetch current user data\",\n        });\n      });\n  }\n  handleFeedClick = (activeFeed) => {\n    this.setState({\n      activeFeed: activeFeed,\n    });\n  };\n  render() {\n    const { currentUser, requestError, activeFeed } = this.state;\n\n    if (requestError) {\n      return <p className=\"article-preview\">{requestError}</p>;\n    }\n\n    if (!currentUser) {\n      return <Loader />;\n    }\n\n    return (\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                <img\n                  src={\n                    currentUser?.image || \"http://i.imgur.com/Qr71crq.jpg\"\n                  }\n                  className=\"user-img\"\n                />\n                <h4>{currentUser?.username}</h4>\n                <p>{currentUser?.bio}</p>\n                <Link\n                  to=\"/settings\"\n                  className=\"btn btn-sm btn-outline-secondary action-btn\"\n                >\n                  <span className=\"ion-compose\">⚙️</span>&nbsp;Edit Profile\n                  Settings\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <div className=\"articles-toggle\">\n                <ul className=\"nav nav-pills outline-active\">\n                  <li\n                    onClick={() => this.handleFeedClick(\"personal\")}\n                    className={`nav-item nav-link ${\n                      activeFeed === \"personal\" ? \"active\" : \"\"\n                    }`}\n                  >\n                    Your Feed\n                  </li>\n                  <li\n                    onClick={() => this.handleFeedClick(\"favorited\")}\n                    className={`nav-item nav-link ${\n                      activeFeed === \"favorited\" ? \"active\" : \"\"\n                    }`}\n                  >\n                    Favorited Articles\n                  </li>\n                </ul>\n              </div>\n\n              <ArticleList\n                activeFeed={activeFeed}\n                username={currentUser?.username}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Dashboard.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/spinner/Spinner.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":112,"column":15,"nodeType":"95","endLine":115,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":57,"column":17,"nodeType":"95","endLine":62,"endColumn":19},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]