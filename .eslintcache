[{"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js":"1","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js":"2","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js":"3","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js":"4","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js":"5","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js":"6","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js":"7","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js":"8","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js":"9","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js":"10","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js":"11","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js":"12","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js":"13","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js":"14","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js":"15","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js":"16","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js":"17","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Profile.js":"18","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Dashboard.js":"19","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/spinner/Spinner.js":"20","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/fullPageSpinner/FullPageSpinner.js":"21"},{"size":290,"mtime":1613062720933,"results":"22","hashOfConfig":"23"},{"size":2426,"mtime":1613901326289,"results":"24","hashOfConfig":"23"},{"size":2599,"mtime":1613666039695,"results":"25","hashOfConfig":"23"},{"size":3897,"mtime":1613902969953,"results":"26","hashOfConfig":"23"},{"size":5983,"mtime":1613902948408,"results":"27","hashOfConfig":"23"},{"size":6606,"mtime":1613903107979,"results":"28","hashOfConfig":"23"},{"size":421,"mtime":1613065293116,"results":"29","hashOfConfig":"23"},{"size":2118,"mtime":1613751890655,"results":"30","hashOfConfig":"23"},{"size":1279,"mtime":1613666010603,"results":"31","hashOfConfig":"23"},{"size":4085,"mtime":1613899376373,"results":"32","hashOfConfig":"23"},{"size":245,"mtime":1613150086148,"results":"33","hashOfConfig":"23"},{"size":4523,"mtime":1613902151679,"results":"34","hashOfConfig":"23"},{"size":181,"mtime":1613078703780,"results":"35","hashOfConfig":"23"},{"size":6369,"mtime":1613902211796,"results":"36","hashOfConfig":"23"},{"size":6669,"mtime":1613902238633,"results":"37","hashOfConfig":"23"},{"size":334,"mtime":1613899349153,"results":"38","hashOfConfig":"23"},{"size":696,"mtime":1613670274510,"results":"39","hashOfConfig":"23"},{"size":3193,"mtime":1613901771755,"results":"40","hashOfConfig":"23"},{"size":2599,"mtime":1613666026763,"results":"41","hashOfConfig":"23"},{"size":100,"mtime":1613587694098,"results":"42","hashOfConfig":"23"},{"size":179,"mtime":1613899125820,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"zysp8q",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/index.js",[],["89","90"],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/App.js",["91"],"import { Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nimport Header from \"./partials/Header\";\nimport Footer from \"./partials/Footer\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport SingleArticle from \"./SingleArticle\";\nimport NewArticle from \"./NewArticle\";\nimport Settings from \"./Settings\";\nimport Profile from \"./Profile\";\nimport { Component } from \"react\";\nimport { localStorageKey, currentUserURL } from \"./utility/utility\";\nimport FullPageSpinner from \"./partials/fullPageSpinner/FullPageSpinner\";\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false,\n    user: null,\n    isVerifying: true,\n  };\n  componentDidMount() {\n    if (localStorage[localStorageKey]) {\n      const requestOptions = {\n        method: \"GET\",\n        headers: { authorization: localStorage.getItem(localStorageKey) },\n      };\n      fetch(currentUserURL, requestOptions)\n        .then((res) => {\n          if (!res.ok) {\n            return res.json().then(({ errors }) => {\n              return Promise.reject(errors);\n            });\n          }\n          return res.json();\n        })\n        .then(({ user }) => {\n          this.updateUser(user);\n        })\n        .catch((errors) => console.log(errors));\n    } else {\n      this.setState({ isVerifying: false });\n    }\n  }\n  updateUser = (user) => {\n    console.log(user);\n    this.setState({ isLoggedIn: true, user, isVerifying: false });\n    localStorage.setItem(localStorageKey, user.token);\n  };\n  render() {\n    const { isLoggedIn, user, isVerifying } = this.state;\n\n    if (isVerifying) {\n      return <FullPageSpinner />;\n    }\n\n    return (\n      <>\n        <Header isLoggedIn={isLoggedIn} user={user} />\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        {/* <Route path=\"/\" exact>\n          <Dashboard />\n        </Route> */}\n        <Route path=\"/login\">\n          <Login updateUser={this.updateUser} />\n        </Route>\n        <Route path=\"/register\">\n          <Register updateUser={this.updateUser} />\n        </Route>\n        <Route path=\"/editor\">\n          <NewArticle />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/articles/:slug\" component={SingleArticle} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Home.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Login.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Register.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/SingleArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Footer.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Header.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/ArticleList.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/TagPills.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Comment.js",["92"],"import { Component } from \"react\";\nimport Loader from \"./loader/Loader\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { articleURL, localStorageKey } from \"../utility/utility\";\nimport Spinner from \"./spinner/Spinner\";\n\nclass Comment extends Component {\n  state = {\n    comments: null,\n    fetchRequestError: \"\",\n    postRequestError: \"\",\n    commentBody: \"\",\n    createdComment: null,\n  };\n  fetchData = () => {\n    const slug = this.props.slug;\n\n    fetch(`${articleURL}/${slug}/comments`, {\n      authorization: localStorage.getItem(localStorageKey),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          comments: data.comments,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          fetchRequestError: \"Not able to fetch the comments\",\n        });\n      });\n  };\n  componentDidMount() {\n    this.fetchData();\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      createdComment: \"spinning\",\n    });\n\n    const slug = this.props.slug;\n    const { commentBody } = this.state;\n    const comment = { body: commentBody };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.getItem(localStorageKey),\n      },\n      body: JSON.stringify({ comment }),\n    };\n    fetch(`${articleURL}/${slug}/comments`, requestOptions)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then((data) => this.setState({ createdComment: data.comment }))\n      .then(() => {\n        this.fetchData();\n      })\n      .catch((error) => {\n        this.setState({\n          postRequestError: \"Not able to create the comment\",\n        });\n      });\n  };\n  handleChange = ({ target }) => {\n    let { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    const {\n      comments,\n      fetchRequestError,\n      commentBody,\n      createdComment,\n    } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-8 offset-md-2\">\n          <form onSubmit={this.handleSubmit} className=\"card comment-form\">\n            <div className=\"card-block\">\n              <textarea\n                name=\"commentBody\"\n                onChange={this.handleChange}\n                value={commentBody}\n                className=\"form-control\"\n                placeholder=\"Write a comment...\"\n                rows=\"3\"\n              ></textarea>\n            </div>\n            <div className=\"card-footer\">\n              {/* current user data image */}\n              <img\n                src=\"http://i.imgur.com/Qr71crq.jpg\"\n                className=\"comment-author-img\"\n              />\n              <button className=\"btn btn-sm btn-primary\">\n                {createdComment === \"spinning\" ? (\n                  <Spinner />\n                ) : (\n                  \"Post Comment\"\n                )}\n              </button>\n            </div>\n          </form>\n          {Comments(comments, fetchRequestError)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Comments(comments, fetchRequestError) {\n  if (fetchRequestError) {\n    return <p className=\"article-preview\">{fetchRequestError}</p>;\n  }\n\n  if (!comments) {\n    return <Loader />;\n  }\n\n  if (!comments?.length) {\n    return <h5 className=\"article-preview\">No comments...</h5>;\n  }\n\n  return comments.map((comment) => (\n    <div key={comment?.id} className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link to=\"/profile\" className=\"comment-author\">\n          <img\n            src={comment.author?.image || \"http://i.imgur.com/Xzm3mI0.jpg\"}\n            alt=\"avatar\"\n            className=\"comment-author-img\"\n          />\n        </Link>\n        &nbsp;\n        <Link to=\"/profile\" className=\"comment-author\">\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">\n          {moment(comment.createdAt).format(\"dddd, MMMM Do YYYY\")}\n        </span>\n        <span className=\"mod-options\">\n          <span className=\"ion-edit\">✏️</span>\n          <span className=\"ion-trash-a\">🗑</span>\n        </span>\n      </div>\n    </div>\n  ));\n}\n\nexport default Comment;\n","/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/loader/Loader.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/NewArticle.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Settings.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/utility/utility.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/Pagination.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Profile.js",["93"],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/Dashboard.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/spinner/Spinner.js",[],"/home/tinkal/Desktop/Altcampus/reactJS/conduit-app/src/components/partials/fullPageSpinner/FullPageSpinner.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":109,"column":15,"nodeType":"104","endLine":112,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":54,"column":17,"nodeType":"104","endLine":59,"endColumn":19},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]